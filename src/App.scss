@import './styles/mixins.scss';

.App {
  --targetselector-display: unset;
  --header-display: unset;
  --main-display: unset;
  background: var(--bg-color-1);
  max-height: 100vh;
  display: grid;
  grid-template: var(--grid-template);
  grid-template-columns: 1fr;
  max-width: 100vw;
  z-index: 0;
  position: relative;
  height: calc(100vh - env(safe-area-inset-bottom) - var(--mobile-footer-height));
  overflow: hidden;

  @supports (height: 100dvh) {
    height: calc(100dvh - env(safe-area-inset-bottom) - var(--mobile-footer-height));
  }

  @supports (height: 100dvh) {
    max-height: 100dvh;
  }

  .TargetSelector {
    grid-area: target-selector;
    display: var(--targetselector-display);
    height: 100%;
    overflow-x: hidden;
    overflow-y: auto;
  }

  .Sidebar {
    padding-top: 1.25em;
    padding-bottom: 1em;

    grid-area: sidebar;
  }

  .Header {
    grid-area: header;

    display: var(--header-display);
  }

  .Main {
    position: relative;
    grid-area: main;
    max-width: 100vw;
    height: auto;
    overflow-x: auto;

    @media only screen and (max-width: 768px) {
      overflow: hidden;
      width: 100vw;
    }

    display: var(--main-display);
  }
}

@media only screen and (min-width: 768px) {
  .App:has(.TargetSelector):has(.ThreadSelector) {
    @media only screen and (min-width: 1300px) {
      grid-template-columns: 3.75rem 1.2fr 3fr;
    }
  }

  .App[data-path='/notifications'] {
    .TargetSelector {
      border-right: solid 1px transparent;
    }

    .Main {
      overflow-x: hidden;
      overflow-y: auto;
      padding: 1rem 0.085em;
    }
  }

  .App {
    --targetselector-display: unset;
    --sidebar-display: unset;
    --header-display: unset;
    --main-display: unset;
    display: flex;
    align-items: flex-start;
    justify-content: flex-start;
    height: 100vh;

    @supports (height: 100dvh) {
      height: 100dvh;
    }

    .Sidebar {
      border-right: solid 1px var(--bg-color-2);
    }

    .Main {
      flex: 1;
      width: 100%;
      height: 100vh;

      @supports (height: 100dvh) {
        height: 100dvh;
      }
    }

    .TargetSelector {
      width: 320px;
      padding: 1rem 0.75rem;
      border-right: solid 1px var(--bg-color-2);
      position: relative;
      height: 100vh;
      overflow-x: hidden;
      overflow-y: auto;

      @supports (height: 100dvh) {
        height: 100dvh;
      }

      .Input {
        padding: 0px 0.75rem;

        img {
          left: calc(0.875rem + 0.75rem) !important;
        }
      }
    }
  }
}
